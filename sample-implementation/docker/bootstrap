#!/bin/sh

set -euo pipefail

mkdir -p /tmp/opt/cdcp/dist && mkdir -p /tmp/opt/cdcp/dist-pending/collection-xml && mkdir -p /tmp/opt/cdcp/transcriptions && mkdir -p /tmp/opt/cdcp/cudl-data-source

# Initialization - load function handler
source $LAMBDA_TASK_ROOT/"$(echo $_HANDLER | cut -d. -f1).sh"

# Processing
while true; do
	HEADERS="$(mktemp)"
	# Get an event. The HTTP request will block until one is received
	EVENT_DATA=$(curl -sS -LD "$HEADERS" "http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/next")

	# Extract request ID by scraping response headers received above
	REQUEST_ID=$(grep -Fi Lambda-Runtime-Aws-Request-Id "$HEADERS" | tr -d '[:space:]' | cut -d: -f2)

	# Run the handler function from the script
	RESPONSE=$($(echo "$_HANDLER" | cut -d. -f3) "$EVENT_DATA")

	# Send the response
	curl --no-progress-meter "http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/$REQUEST_ID/response" -d "$RESPONSE"
done
